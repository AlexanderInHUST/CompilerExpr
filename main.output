Terminals unused in grammar

   _NOT_OP
   _SELF_PLUS_UNARY_OP
   _SELF_MINUS_UNARY_OP
   _COMMENT_LEFT
   _COMMENT_RIGHT
   _LEFT_SELF_PLUS_UNARY_OP
   _LEFT_SELF_MINUS_UNARY_OP
   _RIGHT_SELF_PLUS_UNARY_OP
   _RIGHT_SELF_MINUS_UNARY_OP
   _UMINUS_OP


Grammar

    0 $accept: code $end

    1 code: %empty
    2     | code block
    3     | code _EOF

    4 block: sentence _END_DIVIDED_CHAR
    5      | _LEFT_BRACE code _RIGHT_BRACE
    6      | _IF_CONDITION _LEFT_BRACKET exp _RIGHT_BRACKET block
    7      | _WHILE_CONDITION _LEFT_BRACKET exp _RIGHT_BRACKET block

    8 sentence: var_declaration
    9         | _VARIABLE_NAME assign_series exp

   10 exp: _VARIABLE_NAME
   11    | _INTEGER_VALUE
   12    | _FLOAT_VALUE
   13    | _CHAR_VALUE
   14    | exp _PLUS_OP exp
   15    | exp _MINUS_OP exp
   16    | exp _MULTIPLE_OP exp
   17    | exp _DIVIDE_OP exp
   18    | exp _MODULE_OP exp
   19    | exp _LARGER_OP exp
   20    | exp _LESS_OP exp
   21    | exp _LARGER_EQUAL_OP exp
   22    | exp _LESS_EQUAL_OP exp
   23    | exp _EQUAL_OP exp
   24    | exp _NOT_EQUAL_OP exp
   25    | exp _OR_OP exp
   26    | exp _AND_OP exp
   27    | exp _COMMA_DIVIDED_CHAR exp
   28    | _LEFT_BRACKET exp _RIGHT_BRACKET

   29 assign_series: _ASSIGN_UNARY_OP
   30              | _PLUS_ASSIGN_OP
   31              | _MINUS_ASSIGN_OP
   32              | _MULTI_ASSIGN_OP
   33              | _DIVIDE_ASSIGN_OP
   34              | _MODULE_ASSIGN_OP

   35 var_declaration: _INT_DECLARATION var_link_int
   36                | _FLOAT_RECLARATION var_link_float
   37                | _CHAR_DECLARATION var_link_char

   38 var_link_int: _VARIABLE_NAME _ASSIGN_UNARY_OP _INTEGER_VALUE
   39             | var_link_int _COMMA_DIVIDED_CHAR var_link_int

   40 var_link_float: _VARIABLE_NAME _ASSIGN_UNARY_OP _FLOAT_VALUE
   41               | var_link_float _COMMA_DIVIDED_CHAR var_link_float

   42 var_link_char: _VARIABLE_NAME _ASSIGN_UNARY_OP _CHAR_VALUE
   43              | var_link_char _COMMA_DIVIDED_CHAR var_link_char


Terminals, with rules where they appear

$end (0) 0
error (256)
_VARIABLE_NAME (258) 9 10 38 40 42
_INTEGER_VALUE (259) 11 38
_FLOAT_VALUE (260) 12 40
_CHAR_VALUE (261) 13 42
_INT_DECLARATION (262) 35
_FLOAT_RECLARATION (263) 36
_CHAR_DECLARATION (264) 37
_IF_CONDITION (265) 6
_WHILE_CONDITION (266) 7
_ASSIGN_UNARY_OP (267) 29 38 40 42
_PLUS_OP (268) 14
_MINUS_OP (269) 15
_MULTIPLE_OP (270) 16
_DIVIDE_OP (271) 17
_MODULE_OP (272) 18
_OR_OP (273) 25
_AND_OP (274) 26
_NOT_OP (275)
_PLUS_ASSIGN_OP (276) 30
_MINUS_ASSIGN_OP (277) 31
_MULTI_ASSIGN_OP (278) 32
_DIVIDE_ASSIGN_OP (279) 33
_MODULE_ASSIGN_OP (280) 34
_SELF_PLUS_UNARY_OP (281)
_SELF_MINUS_UNARY_OP (282)
_LARGER_OP (283) 19
_LESS_OP (284) 20
_LARGER_EQUAL_OP (285) 21
_LESS_EQUAL_OP (286) 22
_NOT_EQUAL_OP (287) 24
_EQUAL_OP (288) 23
_LEFT_BRACKET (289) 6 7 28
_RIGHT_BRACKET (290) 6 7 28
_LEFT_BRACE (291) 5
_RIGHT_BRACE (292) 5
_END_DIVIDED_CHAR (293) 4
_COMMA_DIVIDED_CHAR (294) 27 39 41 43
_COMMENT_LEFT (295)
_COMMENT_RIGHT (296)
_EOF (297) 3
_LEFT_SELF_PLUS_UNARY_OP (298)
_LEFT_SELF_MINUS_UNARY_OP (299)
_RIGHT_SELF_PLUS_UNARY_OP (300)
_RIGHT_SELF_MINUS_UNARY_OP (301)
_UMINUS_OP (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
code (49)
    on left: 1 2 3, on right: 0 2 3 5
block (50)
    on left: 4 5 6 7, on right: 2 6 7
sentence (51)
    on left: 8 9, on right: 4
exp (52)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28, on right: 6 7 9 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
assign_series (53)
    on left: 29 30 31 32 33 34, on right: 9
var_declaration (54)
    on left: 35 36 37, on right: 8
var_link_int (55)
    on left: 38 39, on right: 35 39
var_link_float (56)
    on left: 40 41, on right: 36 41
var_link_char (57)
    on left: 42 43, on right: 37 43


State 0

    0 $accept: . code $end

    $default  reduce using rule 1 (code)

    code  go to state 1


State 1

    0 $accept: code . $end
    2 code: code . block
    3     | code . _EOF

    $end                shift, and go to state 2
    _VARIABLE_NAME      shift, and go to state 3
    _INT_DECLARATION    shift, and go to state 4
    _FLOAT_RECLARATION  shift, and go to state 5
    _CHAR_DECLARATION   shift, and go to state 6
    _IF_CONDITION       shift, and go to state 7
    _WHILE_CONDITION    shift, and go to state 8
    _LEFT_BRACE         shift, and go to state 9
    _EOF                shift, and go to state 10

    block            go to state 11
    sentence         go to state 12
    var_declaration  go to state 13


State 2

    0 $accept: code $end .

    $default  accept


State 3

    9 sentence: _VARIABLE_NAME . assign_series exp

    _ASSIGN_UNARY_OP   shift, and go to state 14
    _PLUS_ASSIGN_OP    shift, and go to state 15
    _MINUS_ASSIGN_OP   shift, and go to state 16
    _MULTI_ASSIGN_OP   shift, and go to state 17
    _DIVIDE_ASSIGN_OP  shift, and go to state 18
    _MODULE_ASSIGN_OP  shift, and go to state 19

    assign_series  go to state 20


State 4

   35 var_declaration: _INT_DECLARATION . var_link_int

    _VARIABLE_NAME  shift, and go to state 21

    var_link_int  go to state 22


State 5

   36 var_declaration: _FLOAT_RECLARATION . var_link_float

    _VARIABLE_NAME  shift, and go to state 23

    var_link_float  go to state 24


State 6

   37 var_declaration: _CHAR_DECLARATION . var_link_char

    _VARIABLE_NAME  shift, and go to state 25

    var_link_char  go to state 26


State 7

    6 block: _IF_CONDITION . _LEFT_BRACKET exp _RIGHT_BRACKET block

    _LEFT_BRACKET  shift, and go to state 27


State 8

    7 block: _WHILE_CONDITION . _LEFT_BRACKET exp _RIGHT_BRACKET block

    _LEFT_BRACKET  shift, and go to state 28


State 9

    5 block: _LEFT_BRACE . code _RIGHT_BRACE

    $default  reduce using rule 1 (code)

    code  go to state 29


State 10

    3 code: code _EOF .

    $default  reduce using rule 3 (code)


State 11

    2 code: code block .

    $default  reduce using rule 2 (code)


State 12

    4 block: sentence . _END_DIVIDED_CHAR

    _END_DIVIDED_CHAR  shift, and go to state 30


State 13

    8 sentence: var_declaration .

    $default  reduce using rule 8 (sentence)


State 14

   29 assign_series: _ASSIGN_UNARY_OP .

    $default  reduce using rule 29 (assign_series)


State 15

   30 assign_series: _PLUS_ASSIGN_OP .

    $default  reduce using rule 30 (assign_series)


State 16

   31 assign_series: _MINUS_ASSIGN_OP .

    $default  reduce using rule 31 (assign_series)


State 17

   32 assign_series: _MULTI_ASSIGN_OP .

    $default  reduce using rule 32 (assign_series)


State 18

   33 assign_series: _DIVIDE_ASSIGN_OP .

    $default  reduce using rule 33 (assign_series)


State 19

   34 assign_series: _MODULE_ASSIGN_OP .

    $default  reduce using rule 34 (assign_series)


State 20

    9 sentence: _VARIABLE_NAME assign_series . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 36


State 21

   38 var_link_int: _VARIABLE_NAME . _ASSIGN_UNARY_OP _INTEGER_VALUE

    _ASSIGN_UNARY_OP  shift, and go to state 37


State 22

   35 var_declaration: _INT_DECLARATION var_link_int .
   39 var_link_int: var_link_int . _COMMA_DIVIDED_CHAR var_link_int

    _COMMA_DIVIDED_CHAR  shift, and go to state 38

    $default  reduce using rule 35 (var_declaration)


State 23

   40 var_link_float: _VARIABLE_NAME . _ASSIGN_UNARY_OP _FLOAT_VALUE

    _ASSIGN_UNARY_OP  shift, and go to state 39


State 24

   36 var_declaration: _FLOAT_RECLARATION var_link_float .
   41 var_link_float: var_link_float . _COMMA_DIVIDED_CHAR var_link_float

    _COMMA_DIVIDED_CHAR  shift, and go to state 40

    $default  reduce using rule 36 (var_declaration)


State 25

   42 var_link_char: _VARIABLE_NAME . _ASSIGN_UNARY_OP _CHAR_VALUE

    _ASSIGN_UNARY_OP  shift, and go to state 41


State 26

   37 var_declaration: _CHAR_DECLARATION var_link_char .
   43 var_link_char: var_link_char . _COMMA_DIVIDED_CHAR var_link_char

    _COMMA_DIVIDED_CHAR  shift, and go to state 42

    $default  reduce using rule 37 (var_declaration)


State 27

    6 block: _IF_CONDITION _LEFT_BRACKET . exp _RIGHT_BRACKET block

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 43


State 28

    7 block: _WHILE_CONDITION _LEFT_BRACKET . exp _RIGHT_BRACKET block

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 44


State 29

    2 code: code . block
    3     | code . _EOF
    5 block: _LEFT_BRACE code . _RIGHT_BRACE

    _VARIABLE_NAME      shift, and go to state 3
    _INT_DECLARATION    shift, and go to state 4
    _FLOAT_RECLARATION  shift, and go to state 5
    _CHAR_DECLARATION   shift, and go to state 6
    _IF_CONDITION       shift, and go to state 7
    _WHILE_CONDITION    shift, and go to state 8
    _LEFT_BRACE         shift, and go to state 9
    _RIGHT_BRACE        shift, and go to state 45
    _EOF                shift, and go to state 10

    block            go to state 11
    sentence         go to state 12
    var_declaration  go to state 13


State 30

    4 block: sentence _END_DIVIDED_CHAR .

    $default  reduce using rule 4 (block)


State 31

   10 exp: _VARIABLE_NAME .

    $default  reduce using rule 10 (exp)


State 32

   11 exp: _INTEGER_VALUE .

    $default  reduce using rule 11 (exp)


State 33

   12 exp: _FLOAT_VALUE .

    $default  reduce using rule 12 (exp)


State 34

   13 exp: _CHAR_VALUE .

    $default  reduce using rule 13 (exp)


State 35

   28 exp: _LEFT_BRACKET . exp _RIGHT_BRACKET

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 46


State 36

    9 sentence: _VARIABLE_NAME assign_series exp .
   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    _PLUS_OP             shift, and go to state 47
    _MINUS_OP            shift, and go to state 48
    _MULTIPLE_OP         shift, and go to state 49
    _DIVIDE_OP           shift, and go to state 50
    _MODULE_OP           shift, and go to state 51
    _OR_OP               shift, and go to state 52
    _AND_OP              shift, and go to state 53
    _LARGER_OP           shift, and go to state 54
    _LESS_OP             shift, and go to state 55
    _LARGER_EQUAL_OP     shift, and go to state 56
    _LESS_EQUAL_OP       shift, and go to state 57
    _NOT_EQUAL_OP        shift, and go to state 58
    _EQUAL_OP            shift, and go to state 59
    _COMMA_DIVIDED_CHAR  shift, and go to state 60

    $default  reduce using rule 9 (sentence)


State 37

   38 var_link_int: _VARIABLE_NAME _ASSIGN_UNARY_OP . _INTEGER_VALUE

    _INTEGER_VALUE  shift, and go to state 61


State 38

   39 var_link_int: var_link_int _COMMA_DIVIDED_CHAR . var_link_int

    _VARIABLE_NAME  shift, and go to state 21

    var_link_int  go to state 62


State 39

   40 var_link_float: _VARIABLE_NAME _ASSIGN_UNARY_OP . _FLOAT_VALUE

    _FLOAT_VALUE  shift, and go to state 63


State 40

   41 var_link_float: var_link_float _COMMA_DIVIDED_CHAR . var_link_float

    _VARIABLE_NAME  shift, and go to state 23

    var_link_float  go to state 64


State 41

   42 var_link_char: _VARIABLE_NAME _ASSIGN_UNARY_OP . _CHAR_VALUE

    _CHAR_VALUE  shift, and go to state 65


State 42

   43 var_link_char: var_link_char _COMMA_DIVIDED_CHAR . var_link_char

    _VARIABLE_NAME  shift, and go to state 25

    var_link_char  go to state 66


State 43

    6 block: _IF_CONDITION _LEFT_BRACKET exp . _RIGHT_BRACKET block
   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    _PLUS_OP             shift, and go to state 47
    _MINUS_OP            shift, and go to state 48
    _MULTIPLE_OP         shift, and go to state 49
    _DIVIDE_OP           shift, and go to state 50
    _MODULE_OP           shift, and go to state 51
    _OR_OP               shift, and go to state 52
    _AND_OP              shift, and go to state 53
    _LARGER_OP           shift, and go to state 54
    _LESS_OP             shift, and go to state 55
    _LARGER_EQUAL_OP     shift, and go to state 56
    _LESS_EQUAL_OP       shift, and go to state 57
    _NOT_EQUAL_OP        shift, and go to state 58
    _EQUAL_OP            shift, and go to state 59
    _RIGHT_BRACKET       shift, and go to state 67
    _COMMA_DIVIDED_CHAR  shift, and go to state 60


State 44

    7 block: _WHILE_CONDITION _LEFT_BRACKET exp . _RIGHT_BRACKET block
   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    _PLUS_OP             shift, and go to state 47
    _MINUS_OP            shift, and go to state 48
    _MULTIPLE_OP         shift, and go to state 49
    _DIVIDE_OP           shift, and go to state 50
    _MODULE_OP           shift, and go to state 51
    _OR_OP               shift, and go to state 52
    _AND_OP              shift, and go to state 53
    _LARGER_OP           shift, and go to state 54
    _LESS_OP             shift, and go to state 55
    _LARGER_EQUAL_OP     shift, and go to state 56
    _LESS_EQUAL_OP       shift, and go to state 57
    _NOT_EQUAL_OP        shift, and go to state 58
    _EQUAL_OP            shift, and go to state 59
    _RIGHT_BRACKET       shift, and go to state 68
    _COMMA_DIVIDED_CHAR  shift, and go to state 60


State 45

    5 block: _LEFT_BRACE code _RIGHT_BRACE .

    $default  reduce using rule 5 (block)


State 46

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp
   28    | _LEFT_BRACKET exp . _RIGHT_BRACKET

    _PLUS_OP             shift, and go to state 47
    _MINUS_OP            shift, and go to state 48
    _MULTIPLE_OP         shift, and go to state 49
    _DIVIDE_OP           shift, and go to state 50
    _MODULE_OP           shift, and go to state 51
    _OR_OP               shift, and go to state 52
    _AND_OP              shift, and go to state 53
    _LARGER_OP           shift, and go to state 54
    _LESS_OP             shift, and go to state 55
    _LARGER_EQUAL_OP     shift, and go to state 56
    _LESS_EQUAL_OP       shift, and go to state 57
    _NOT_EQUAL_OP        shift, and go to state 58
    _EQUAL_OP            shift, and go to state 59
    _RIGHT_BRACKET       shift, and go to state 69
    _COMMA_DIVIDED_CHAR  shift, and go to state 60


State 47

   14 exp: exp _PLUS_OP . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 70


State 48

   15 exp: exp _MINUS_OP . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 71


State 49

   16 exp: exp _MULTIPLE_OP . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 72


State 50

   17 exp: exp _DIVIDE_OP . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 73


State 51

   18 exp: exp _MODULE_OP . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 74


State 52

   25 exp: exp _OR_OP . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 75


State 53

   26 exp: exp _AND_OP . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 76


State 54

   19 exp: exp _LARGER_OP . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 77


State 55

   20 exp: exp _LESS_OP . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 78


State 56

   21 exp: exp _LARGER_EQUAL_OP . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 79


State 57

   22 exp: exp _LESS_EQUAL_OP . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 80


State 58

   24 exp: exp _NOT_EQUAL_OP . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 81


State 59

   23 exp: exp _EQUAL_OP . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 82


State 60

   27 exp: exp _COMMA_DIVIDED_CHAR . exp

    _VARIABLE_NAME  shift, and go to state 31
    _INTEGER_VALUE  shift, and go to state 32
    _FLOAT_VALUE    shift, and go to state 33
    _CHAR_VALUE     shift, and go to state 34
    _LEFT_BRACKET   shift, and go to state 35

    exp  go to state 83


State 61

   38 var_link_int: _VARIABLE_NAME _ASSIGN_UNARY_OP _INTEGER_VALUE .

    $default  reduce using rule 38 (var_link_int)


State 62

   39 var_link_int: var_link_int . _COMMA_DIVIDED_CHAR var_link_int
   39             | var_link_int _COMMA_DIVIDED_CHAR var_link_int .

    $default  reduce using rule 39 (var_link_int)


State 63

   40 var_link_float: _VARIABLE_NAME _ASSIGN_UNARY_OP _FLOAT_VALUE .

    $default  reduce using rule 40 (var_link_float)


State 64

   41 var_link_float: var_link_float . _COMMA_DIVIDED_CHAR var_link_float
   41               | var_link_float _COMMA_DIVIDED_CHAR var_link_float .

    $default  reduce using rule 41 (var_link_float)


State 65

   42 var_link_char: _VARIABLE_NAME _ASSIGN_UNARY_OP _CHAR_VALUE .

    $default  reduce using rule 42 (var_link_char)


State 66

   43 var_link_char: var_link_char . _COMMA_DIVIDED_CHAR var_link_char
   43              | var_link_char _COMMA_DIVIDED_CHAR var_link_char .

    $default  reduce using rule 43 (var_link_char)


State 67

    6 block: _IF_CONDITION _LEFT_BRACKET exp _RIGHT_BRACKET . block

    _VARIABLE_NAME      shift, and go to state 3
    _INT_DECLARATION    shift, and go to state 4
    _FLOAT_RECLARATION  shift, and go to state 5
    _CHAR_DECLARATION   shift, and go to state 6
    _IF_CONDITION       shift, and go to state 7
    _WHILE_CONDITION    shift, and go to state 8
    _LEFT_BRACE         shift, and go to state 9

    block            go to state 84
    sentence         go to state 12
    var_declaration  go to state 13


State 68

    7 block: _WHILE_CONDITION _LEFT_BRACKET exp _RIGHT_BRACKET . block

    _VARIABLE_NAME      shift, and go to state 3
    _INT_DECLARATION    shift, and go to state 4
    _FLOAT_RECLARATION  shift, and go to state 5
    _CHAR_DECLARATION   shift, and go to state 6
    _IF_CONDITION       shift, and go to state 7
    _WHILE_CONDITION    shift, and go to state 8
    _LEFT_BRACE         shift, and go to state 9

    block            go to state 85
    sentence         go to state 12
    var_declaration  go to state 13


State 69

   28 exp: _LEFT_BRACKET exp _RIGHT_BRACKET .

    $default  reduce using rule 28 (exp)


State 70

   14 exp: exp . _PLUS_OP exp
   14    | exp _PLUS_OP exp .
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    _MULTIPLE_OP  shift, and go to state 49
    _DIVIDE_OP    shift, and go to state 50
    _MODULE_OP    shift, and go to state 51

    $default  reduce using rule 14 (exp)


State 71

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   15    | exp _MINUS_OP exp .
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    _MULTIPLE_OP  shift, and go to state 49
    _DIVIDE_OP    shift, and go to state 50
    _MODULE_OP    shift, and go to state 51

    $default  reduce using rule 15 (exp)


State 72

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   16    | exp _MULTIPLE_OP exp .
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    $default  reduce using rule 16 (exp)


State 73

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   17    | exp _DIVIDE_OP exp .
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    $default  reduce using rule 17 (exp)


State 74

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   18    | exp _MODULE_OP exp .
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    $default  reduce using rule 18 (exp)


State 75

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   25    | exp _OR_OP exp .
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    _PLUS_OP          shift, and go to state 47
    _MINUS_OP         shift, and go to state 48
    _MULTIPLE_OP      shift, and go to state 49
    _DIVIDE_OP        shift, and go to state 50
    _MODULE_OP        shift, and go to state 51
    _LARGER_OP        shift, and go to state 54
    _LESS_OP          shift, and go to state 55
    _LARGER_EQUAL_OP  shift, and go to state 56
    _LESS_EQUAL_OP    shift, and go to state 57
    _NOT_EQUAL_OP     shift, and go to state 58
    _EQUAL_OP         shift, and go to state 59

    $default  reduce using rule 25 (exp)


State 76

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   26    | exp _AND_OP exp .
   27    | exp . _COMMA_DIVIDED_CHAR exp

    _PLUS_OP          shift, and go to state 47
    _MINUS_OP         shift, and go to state 48
    _MULTIPLE_OP      shift, and go to state 49
    _DIVIDE_OP        shift, and go to state 50
    _MODULE_OP        shift, and go to state 51
    _LARGER_OP        shift, and go to state 54
    _LESS_OP          shift, and go to state 55
    _LARGER_EQUAL_OP  shift, and go to state 56
    _LESS_EQUAL_OP    shift, and go to state 57
    _NOT_EQUAL_OP     shift, and go to state 58
    _EQUAL_OP         shift, and go to state 59

    $default  reduce using rule 26 (exp)


State 77

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   19    | exp _LARGER_OP exp .
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    _PLUS_OP      shift, and go to state 47
    _MINUS_OP     shift, and go to state 48
    _MULTIPLE_OP  shift, and go to state 49
    _DIVIDE_OP    shift, and go to state 50
    _MODULE_OP    shift, and go to state 51

    $default  reduce using rule 19 (exp)


State 78

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   20    | exp _LESS_OP exp .
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    _PLUS_OP      shift, and go to state 47
    _MINUS_OP     shift, and go to state 48
    _MULTIPLE_OP  shift, and go to state 49
    _DIVIDE_OP    shift, and go to state 50
    _MODULE_OP    shift, and go to state 51

    $default  reduce using rule 20 (exp)


State 79

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   21    | exp _LARGER_EQUAL_OP exp .
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    _PLUS_OP      shift, and go to state 47
    _MINUS_OP     shift, and go to state 48
    _MULTIPLE_OP  shift, and go to state 49
    _DIVIDE_OP    shift, and go to state 50
    _MODULE_OP    shift, and go to state 51

    $default  reduce using rule 21 (exp)


State 80

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   22    | exp _LESS_EQUAL_OP exp .
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    _PLUS_OP      shift, and go to state 47
    _MINUS_OP     shift, and go to state 48
    _MULTIPLE_OP  shift, and go to state 49
    _DIVIDE_OP    shift, and go to state 50
    _MODULE_OP    shift, and go to state 51

    $default  reduce using rule 22 (exp)


State 81

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   24    | exp _NOT_EQUAL_OP exp .
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    _PLUS_OP          shift, and go to state 47
    _MINUS_OP         shift, and go to state 48
    _MULTIPLE_OP      shift, and go to state 49
    _DIVIDE_OP        shift, and go to state 50
    _MODULE_OP        shift, and go to state 51
    _LARGER_OP        shift, and go to state 54
    _LESS_OP          shift, and go to state 55
    _LARGER_EQUAL_OP  shift, and go to state 56
    _LESS_EQUAL_OP    shift, and go to state 57

    $default  reduce using rule 24 (exp)


State 82

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   23    | exp _EQUAL_OP exp .
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp

    _PLUS_OP          shift, and go to state 47
    _MINUS_OP         shift, and go to state 48
    _MULTIPLE_OP      shift, and go to state 49
    _DIVIDE_OP        shift, and go to state 50
    _MODULE_OP        shift, and go to state 51
    _LARGER_OP        shift, and go to state 54
    _LESS_OP          shift, and go to state 55
    _LARGER_EQUAL_OP  shift, and go to state 56
    _LESS_EQUAL_OP    shift, and go to state 57

    $default  reduce using rule 23 (exp)


State 83

   14 exp: exp . _PLUS_OP exp
   15    | exp . _MINUS_OP exp
   16    | exp . _MULTIPLE_OP exp
   17    | exp . _DIVIDE_OP exp
   18    | exp . _MODULE_OP exp
   19    | exp . _LARGER_OP exp
   20    | exp . _LESS_OP exp
   21    | exp . _LARGER_EQUAL_OP exp
   22    | exp . _LESS_EQUAL_OP exp
   23    | exp . _EQUAL_OP exp
   24    | exp . _NOT_EQUAL_OP exp
   25    | exp . _OR_OP exp
   26    | exp . _AND_OP exp
   27    | exp . _COMMA_DIVIDED_CHAR exp
   27    | exp _COMMA_DIVIDED_CHAR exp .

    _PLUS_OP          shift, and go to state 47
    _MINUS_OP         shift, and go to state 48
    _MULTIPLE_OP      shift, and go to state 49
    _DIVIDE_OP        shift, and go to state 50
    _MODULE_OP        shift, and go to state 51
    _OR_OP            shift, and go to state 52
    _AND_OP           shift, and go to state 53
    _LARGER_OP        shift, and go to state 54
    _LESS_OP          shift, and go to state 55
    _LARGER_EQUAL_OP  shift, and go to state 56
    _LESS_EQUAL_OP    shift, and go to state 57
    _NOT_EQUAL_OP     shift, and go to state 58
    _EQUAL_OP         shift, and go to state 59

    $default  reduce using rule 27 (exp)


State 84

    6 block: _IF_CONDITION _LEFT_BRACKET exp _RIGHT_BRACKET block .

    $default  reduce using rule 6 (block)


State 85

    7 block: _WHILE_CONDITION _LEFT_BRACKET exp _RIGHT_BRACKET block .

    $default  reduce using rule 7 (block)
